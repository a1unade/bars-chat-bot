name: deploy

on:
  workflow_run:
    workflows: ["build"]
    types: [completed]

jobs:
  deploy-webapi:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.14
        with:
          versionSpec: '6.2.x'

      - name: Run GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.14

      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_DEPLOY_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push webapi image
        run: |
          VERSION=${{ steps.gitversion.outputs.semVer }}
          IMAGE=ghcr.io/${{ github.repository_owner }}/bars-chat-bot/notifyhub-webapi
          docker build -t $IMAGE:latest -t $IMAGE:$VERSION -f ./NotifyHub/NotifyHub.WebApi/Dockerfile NotifyHub
          docker push $IMAGE:latest
          docker push $IMAGE:$VERSION

  deploy-gateway:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    needs: deploy-webapi
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.14
        with:
          versionSpec: '6.2.x'

      - name: Run GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.14

      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_DEPLOY_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push gateway image
        run: |
          VERSION=${{ steps.gitversion.outputs.semVer }}
          IMAGE=ghcr.io/${{ github.repository_owner }}/bars-chat-bot/notifyhub-gateway
          docker build -t $IMAGE:latest -t $IMAGE:$VERSION -f ./NotifyHub.Gateway/NotifyHub.Gateway/Dockerfile NotifyHub.Gateway
          docker push $IMAGE:latest
          docker push $IMAGE:$VERSION

  deploy-notification:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    needs: deploy-gateway
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.14
        with:
          versionSpec: '6.2.x'

      - name: Run GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.14

      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_DEPLOY_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push notification image
        run: |
          VERSION=${{ steps.gitversion.outputs.semVer }}
          IMAGE=ghcr.io/${{ github.repository_owner }}/bars-chat-bot/notifyhub-notification
          docker build -t $IMAGE:latest -t $IMAGE:$VERSION -f ./NotifyHub.NotificationService/NotifyHub.NotificationService.WebApi/Dockerfile NotifyHub.NotificationService
          docker push $IMAGE:latest
          docker push $IMAGE:$VERSION

  deploy-outbox:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    needs: deploy-notification
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.14
        with:
          versionSpec: '6.2.x'

      - name: Run GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.14

      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_DEPLOY_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push outbox image
        run: |
          VERSION=${{ steps.gitversion.outputs.semVer }}
          IMAGE=ghcr.io/${{ github.repository_owner }}/bars-chat-bot/notifyhub-outbox
          docker build -t $IMAGE:latest -t $IMAGE:$VERSION -f ./NotifyHub.OutboxProcessor/NotifyHub.OutboxProcessor.WebApi/Dockerfile NotifyHub.OutboxProcessor
          docker push $IMAGE:latest
          docker push $IMAGE:$VERSION

  deploy-compose:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    needs: [deploy-webapi, deploy-gateway, deploy-notification, deploy-outbox]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.14
        with:
          versionSpec: '6.2.x'

      - name: Run GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.14

      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_DEPLOY_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Run docker-compose
        run: |
          docker compose -f docker-compose.yml pull
          docker compose -f docker-compose.yml up -d